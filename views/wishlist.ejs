<div class="wishlist-container fade-in">
  <div class="wishlist-header card fade-in">
    <h1>❤️ My Wishlist</h1>
    <p>Save your favorite desserts for later</p>
  </div>
  
  <% if (user.wishlist && user.wishlist.length > 0) { %>
    <div class="wishlist-content">
      <div class="wishlist-grid">
        <% user.wishlist.forEach(function(product) { %>
          <div class="wishlist-item card fade-in" data-product-id="<%= product._id %>">
            <div class="item-image-container">
              <img src="<%= product.image %>" alt="<%= product.name %>" class="item-image">
              <button class="remove-wishlist-btn" onclick="removeFromWishlist('<%= product._id %>')" title="Remove from Wishlist">
                <i class="fas fa-times"></i>
              </button>
            </div>
            <div class="item-details">
              <h3><%= product.name %></h3>
              <p class="item-description"><%= product.description %></p>
              <div class="item-price">$<%= product.price.toFixed(2) %></div>
              <div class="item-stock">
                <% if (product.stock > 0) { %>
                  <span class="in-stock">In Stock (<%= product.stock %> available)</span>
                <% } else { %>
                  <span class="out-of-stock">Out of Stock</span>
                <% } %>
              </div>
              <div class="item-actions">
                <% if (product.stock > 0) { %>
                  <button class="btn-main add-to-cart-btn" onclick="addToCart('<%= product._id %>')">
                    <i class="fas fa-shopping-cart"></i> Add to Cart
                  </button>
                <% } else { %>
                  <button class="btn-secondary" disabled>Out of Stock</button>
                <% } %>
                <a href="/products/<%= product._id %>" class="btn-secondary">
                  <i class="fas fa-eye"></i> View Details
                </a>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
      
      <div class="wishlist-summary card fade-in">
        <div class="summary-content">
          <h3>Wishlist Summary</h3>
          <p><%= user.wishlist.length %> item<%= user.wishlist.length !== 1 ? 's' : '' %> in your wishlist</p>
          <div class="summary-actions">
            <button class="btn-main" onclick="addAllToCart()">
              <i class="fas fa-shopping-cart"></i> Add All to Cart
            </button>
            <button class="btn-secondary" onclick="clearWishlist()">
              <i class="fas fa-trash"></i> Clear Wishlist
            </button>
          </div>
        </div>
      </div>
    </div>
  <% } else { %>
    <div class="empty-wishlist card fade-in">
      <div class="empty-icon">❤️</div>
      <h3>Your Wishlist is Empty</h3>
      <p>Start adding your favorite desserts to your wishlist!</p>
      <a href="/products" class="btn-main">Browse Products</a>
    </div>
  <% } %>
</div>

<script>
// Remove from wishlist functionality
function removeFromWishlist(productId) {
  if (!confirm('Are you sure you want to remove this item from your wishlist?')) {
    return;
  }
  
  const wishlistItem = document.querySelector(`[data-product-id="${productId}"]`);
  wishlistItem.style.opacity = '0.5';
  
  fetch(`/wishlist/remove/${productId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    }
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      // Remove item from DOM with animation
      wishlistItem.style.transform = 'scale(0.8)';
      wishlistItem.style.opacity = '0';
      setTimeout(() => {
        wishlistItem.remove();
        // Check if wishlist is empty
        const remainingItems = document.querySelectorAll('.wishlist-item');
        if (remainingItems.length === 0) {
          window.location.reload();
        }
      }, 300);
      showNotification('Removed from wishlist', 'success');
    } else {
      showNotification(data.error || 'Error removing from wishlist', 'error');
      wishlistItem.style.opacity = '1';
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showNotification('Error removing from wishlist', 'error');
    wishlistItem.style.opacity = '1';
  });
}

// Add to cart functionality
function addToCart(productId) {
  const button = document.querySelector(`[data-product-id="${productId}"] .add-to-cart-btn`);
  const originalText = button.innerHTML;
  
  // Show loading state
  button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
  button.disabled = true;
  
  fetch('/cart/add', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ productId, quantity: 1 })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showNotification('Added to cart!', 'success');
      // Update cart count in navbar
      updateCartCount();
    } else {
      showNotification(data.error || 'Error adding to cart', 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showNotification('Error adding to cart', 'error');
  })
  .finally(() => {
    button.innerHTML = originalText;
    button.disabled = false;
  });
}

// Add all to cart functionality
function addAllToCart() {
  const inStockItems = document.querySelectorAll('.wishlist-item .in-stock');
  if (inStockItems.length === 0) {
    showNotification('No items in stock to add to cart', 'error');
    return;
  }
  
  if (!confirm(`Add ${inStockItems.length} in-stock item(s) to cart?`)) {
    return;
  }
  
  const buttons = document.querySelectorAll('.add-to-cart-btn');
  let addedCount = 0;
  let errorCount = 0;
  
  buttons.forEach((button, index) => {
    setTimeout(() => {
      const productId = button.closest('.wishlist-item').getAttribute('data-product-id');
      const originalText = button.innerHTML;
      
      button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
      button.disabled = true;
      
      fetch('/cart/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity: 1 })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          addedCount++;
        } else {
          errorCount++;
        }
      })
      .catch(error => {
        console.error('Error:', error);
        errorCount++;
      })
      .finally(() => {
        button.innerHTML = originalText;
        button.disabled = false;
        
        // Check if all requests are complete
        if (addedCount + errorCount === buttons.length) {
          if (addedCount > 0) {
            showNotification(`Added ${addedCount} item(s) to cart!`, 'success');
            updateCartCount();
          }
          if (errorCount > 0) {
            showNotification(`${errorCount} item(s) could not be added`, 'error');
          }
        }
      });
    }, index * 200); // Stagger requests
  });
}

// Clear wishlist functionality
function clearWishlist() {
  if (!confirm('Are you sure you want to clear your entire wishlist? This action cannot be undone.')) {
    return;
  }
  
  fetch('/wishlist/clear', {
    method: 'DELETE',
    headers: {
      'Content-Type': 'application/json',
    }
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showNotification('Wishlist cleared successfully', 'success');
      window.location.reload();
    } else {
      showNotification(data.error || 'Error clearing wishlist', 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showNotification('Error clearing wishlist', 'error');
  });
}

// Update cart count in navbar
function updateCartCount() {
  const cartCountElement = document.querySelector('.cart-count');
  if (cartCountElement) {
    let currentCount = parseInt(cartCountElement.textContent) || 0;
    cartCountElement.textContent = currentCount + 1;
  }
}

// Notification system
function showNotification(message, type = 'info') {
  const notification = document.createElement('div');
  notification.className = `notification notification-${type}`;
  notification.innerHTML = `
    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
    <span>${message}</span>
  `;
  
  const bgColor = type === 'success' ? '#a8e6cf' : type === 'error' ? '#e74c3c' : '#4361EE';
  
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: ${bgColor};
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    z-index: 10001;
    transform: translateX(100%);
    transition: transform 0.3s ease;
    font-weight: 500;
  `;
  
  document.body.appendChild(notification);
  
  // Animate in
  setTimeout(() => {
    notification.style.transform = 'translateX(0)';
  }, 10);
  
  // Remove after 3 seconds
  setTimeout(() => {
    notification.style.transform = 'translateX(100%)';
    setTimeout(() => {
      notification.remove();
    }, 300);
  }, 3000);
}
</script>

<style>
.wishlist-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.wishlist-header {
  text-align: center;
  margin-bottom: 2rem;
  background: linear-gradient(135deg, #e91e63, #9c27b0);
  color: white;
  padding: 2rem;
  border-radius: 15px;
}

.wishlist-header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  margin: 0 0 0.5rem 0;
}

.wishlist-header p {
  font-size: 1.1rem;
  opacity: 0.9;
  margin: 0;
}

.wishlist-content {
  display: grid;
  grid-template-columns: 1fr 300px;
  gap: 2rem;
}

.wishlist-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 1.5rem;
}

.wishlist-item {
  background: white;
  border-radius: 15px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  position: relative;
}

.wishlist-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
}

.item-image-container {
  position: relative;
  height: 200px;
  overflow: hidden;
}

.item-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.wishlist-item:hover .item-image {
  transform: scale(1.05);
}

.remove-wishlist-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  border: none;
  background: rgba(255, 255, 255, 0.9);
  color: #e74c3c;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1rem;
}

.remove-wishlist-btn:hover {
  background: #e74c3c;
  color: white;
  transform: scale(1.1);
}

.item-details {
  padding: 1.5rem;
}

.item-details h3 {
  margin: 0 0 0.5rem 0;
  color: #2c3e50;
  font-weight: 600;
  font-size: 1.2rem;
}

.item-description {
  color: #6c757d;
  font-size: 0.9rem;
  margin-bottom: 1rem;
  line-height: 1.4;
}

.item-price {
  font-size: 1.3rem;
  font-weight: 700;
  color: #4361EE;
  margin-bottom: 0.5rem;
}

.item-stock {
  margin-bottom: 1rem;
}

.in-stock {
  color: #27ae60;
  font-weight: 500;
}

.out-of-stock {
  color: #e74c3c;
  font-weight: 500;
}

.item-actions {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.item-actions button,
.item-actions a {
  flex: 1;
  padding: 0.8rem;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-decoration: none;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.add-to-cart-btn {
  background: linear-gradient(135deg, #4361EE, #3a0ca3);
  color: white;
}

.add-to-cart-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(67, 97, 238, 0.3);
}

.item-actions .btn-secondary {
  background: #f8f9fa;
  color: #6c757d;
  border: 1px solid #dee2e6;
}

.item-actions .btn-secondary:hover {
  background: #e9ecef;
  color: #495057;
}

.wishlist-summary {
  background: white;
  border-radius: 15px;
  padding: 2rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  height: fit-content;
  position: sticky;
  top: 2rem;
}

.summary-content h3 {
  margin: 0 0 1rem 0;
  color: #2c3e50;
  font-weight: 600;
}

.summary-content p {
  color: #6c757d;
  margin-bottom: 1.5rem;
}

.summary-actions {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.summary-actions button {
  width: 100%;
  padding: 1rem;
  border: none;
  border-radius: 12px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.summary-actions .btn-main {
  background: linear-gradient(135deg, #4361EE, #3a0ca3);
  color: white;
}

.summary-actions .btn-main:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(67, 97, 238, 0.3);
}

.summary-actions .btn-secondary {
  background: white;
  color: #e74c3c;
  border: 1px solid #e74c3c;
}

.summary-actions .btn-secondary:hover {
  background: #e74c3c;
  color: white;
}

.empty-wishlist {
  text-align: center;
  padding: 4rem 2rem;
  background: white;
  border-radius: 15px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.empty-icon {
  font-size: 4rem;
  margin-bottom: 1rem;
}

.empty-wishlist h3 {
  color: #2c3e50;
  margin-bottom: 1rem;
}

.empty-wishlist p {
  color: #6c757d;
  margin-bottom: 2rem;
}

.empty-wishlist .btn-main {
  padding: 1rem 2rem;
  border: none;
  border-radius: 12px;
  background: linear-gradient(135deg, #4361EE, #3a0ca3);
  color: white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-decoration: none;
  display: inline-block;
}

.empty-wishlist .btn-main:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(67, 97, 238, 0.3);
}

@media (max-width: 768px) {
  .wishlist-content {
    grid-template-columns: 1fr;
  }
  
  .wishlist-grid {
    grid-template-columns: 1fr;
  }
  
  .item-actions {
    flex-direction: column;
  }
}
</style> 